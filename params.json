{"name":"Socket","tagline":"","body":"# What is libSocket ?\r\nA object abstraction layer for networking communications calls in C++\r\n\r\n# How do i build it?\r\n```Bash\r\n    git clone https://github.com/inbre001/Socket.git;\r\n    cd Socket/build;\r\n    make;\r\n```\r\n# How do i use it? \r\nInclude <Socket.h> in your Code\r\n```C++\r\n#include <Socket.h> \r\n```\r\nnow you can initialize TCP, UDP or UNIX Sockets. Like this:\r\n```C++\r\nTCPServerSocket tcp_server(int port)\r\nTCPClientSocket tcp_client(char* server_addr, int port);\r\n\r\nUDPSocket udp_server(int port);\r\nUDPSocket udp_client(int port, char* server_addr);\r\n\r\nUNIXServerSocket unix_ss(char *path_to_sockfile);\r\nUNIXClientSocket unix_cs(char* path_to_sockfile);\r\n```\r\nServerSockets provide the accept() function to listen for incoming Connections\r\nClientSockets provide the corresponding connect() function\r\n\r\nHave a look at the Short Examples to get started quickly.\r\n\r\n# Short Examples\r\n\r\n*  TCP [Server](examples/TCPEchoServer.cpp) and [Client](examples/TCPEchoClient.cpp)\r\n*  UDP [Server](examples/UDPEchoServer.cpp) and [Client](examples/UDPEchoClient.cpp)\r\n* UNIX [Server](examples/UNIXEchoServer.cpp) and [Client](examples/UNIXEchoClient.cpp)\r\n\r\n# More advanced stuff:\r\nTODO: write examples for async. communication and timeouts\r\n\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}