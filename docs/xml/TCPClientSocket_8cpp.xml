<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="TCPClientSocket_8cpp" kind="file">
    <compoundname>TCPClientSocket.cpp</compoundname>
    <includes refid="TCPClientSocket_8h" local="no">TCPClientSocket.h</includes>
    <incdepgraph>
      <node id="886">
        <label>netinet/in.h</label>
      </node>
      <node id="875">
        <label>arpa/inet.h</label>
      </node>
      <node id="869">
        <label>src/TCPClientSocket.cpp</label>
        <link refid="TCPClientSocket.cpp"/>
        <childnode refid="870" relation="include">
        </childnode>
      </node>
      <node id="870">
        <label>TCPClientSocket.h</label>
        <link refid="TCPClientSocket_8h"/>
        <childnode refid="871" relation="include">
        </childnode>
        <childnode refid="872" relation="include">
        </childnode>
        <childnode refid="873" relation="include">
        </childnode>
        <childnode refid="874" relation="include">
        </childnode>
        <childnode refid="875" relation="include">
        </childnode>
        <childnode refid="876" relation="include">
        </childnode>
        <childnode refid="877" relation="include">
        </childnode>
        <childnode refid="878" relation="include">
        </childnode>
        <childnode refid="879" relation="include">
        </childnode>
        <childnode refid="880" relation="include">
        </childnode>
        <childnode refid="889" relation="include">
        </childnode>
      </node>
      <node id="877">
        <label>cmath</label>
      </node>
      <node id="879">
        <label>stdexcept</label>
      </node>
      <node id="882">
        <label>poll.h</label>
      </node>
      <node id="887">
        <label>fcntl.h</label>
      </node>
      <node id="883">
        <label>string</label>
      </node>
      <node id="874">
        <label>sys/unistd.h</label>
      </node>
      <node id="872">
        <label>netdb.h</label>
      </node>
      <node id="885">
        <label>SocketFd.h</label>
        <link refid="SocketFd_8h"/>
        <childnode refid="886" relation="include">
        </childnode>
        <childnode refid="871" relation="include">
        </childnode>
        <childnode refid="887" relation="include">
        </childnode>
        <childnode refid="881" relation="include">
        </childnode>
        <childnode refid="888" relation="include">
        </childnode>
        <childnode refid="882" relation="include">
        </childnode>
      </node>
      <node id="880">
        <label>Connection.h</label>
        <link refid="Connection_8h"/>
        <childnode refid="881" relation="include">
        </childnode>
        <childnode refid="874" relation="include">
        </childnode>
        <childnode refid="882" relation="include">
        </childnode>
        <childnode refid="883" relation="include">
        </childnode>
        <childnode refid="884" relation="include">
        </childnode>
        <childnode refid="885" relation="include">
        </childnode>
      </node>
      <node id="878">
        <label>cstdio</label>
      </node>
      <node id="888">
        <label>unistd.h</label>
      </node>
      <node id="889">
        <label>TCPSocket.h</label>
        <link refid="TCPSocket_8h"/>
        <childnode refid="872" relation="include">
        </childnode>
        <childnode refid="873" relation="include">
        </childnode>
        <childnode refid="871" relation="include">
        </childnode>
      </node>
      <node id="884">
        <label>Transceiver.h</label>
        <link refid="Transceiver_8h"/>
      </node>
      <node id="873">
        <label>bits/socket.h</label>
      </node>
      <node id="871">
        <label>sys/socket.h</label>
      </node>
      <node id="881">
        <label>stdio.h</label>
      </node>
      <node id="876">
        <label>cstring</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;<ref refid="TCPClientSocket_8h" kindref="compound">TCPClientSocket.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3" refid="classTCPClientSocket_1a3cdffa36ad33265b280c136ad597f9fd" refkind="member"><highlight class="normal"><ref refid="classTCPClientSocket_1a3cdffa36ad33265b280c136ad597f9fd" kindref="member">TCPClientSocket::TCPClientSocket</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>host,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>iport)<sp/>{</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nb_digits<sp/>=<sp/>(</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/>&lt;<sp/>iport<sp/>?<sp/>(int)<sp/>log10((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<sp/>iport)<sp/>+<sp/>1<sp/>:<sp/>1);</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>port[nb_digits<sp/>+<sp/>1];<sp/></highlight><highlight class="comment">//<sp/>add<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classConnection_1af54be737cc02308299c2e80a893a3e46" kindref="member">n</ref><sp/>=<sp/>(sprintf(port,<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>iport));</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>&gt;<sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*msg<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;TCPClientSocket::sprintf()<sp/>failed&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(msg);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(msg);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(&amp;<ref refid="classTCPSocket_1a76a561d3c5594dd8bc7f57a10add34b8" kindref="member">hints</ref>,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/><ref refid="classTCPSocket_1a76a561d3c5594dd8bc7f57a10add34b8" kindref="member">hints</ref>);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classTCPSocket_1a76a561d3c5594dd8bc7f57a10add34b8" kindref="member">hints</ref>.ai_family<sp/>=<sp/>AF_UNSPEC;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classTCPSocket_1a76a561d3c5594dd8bc7f57a10add34b8" kindref="member">hints</ref>.ai_socktype<sp/>=<sp/>SOCK_STREAM;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="classTCPSocket_1a2f6471b799685ee580a9cfa5d94ac3a7" kindref="member">rv</ref><sp/>=<sp/>getaddrinfo(host,<sp/>port,<sp/>&amp;<ref refid="classTCPSocket_1a76a561d3c5594dd8bc7f57a10add34b8" kindref="member">hints</ref>,<sp/>&amp;<ref refid="classTCPSocket_1a79ce3d1a12b7371a6838dad34d0e8cf3" kindref="member">servinfo</ref>))<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freeaddrinfo(<ref refid="classTCPSocket_1a79ce3d1a12b7371a6838dad34d0e8cf3" kindref="member">servinfo</ref>);<sp/></highlight><highlight class="comment">//<sp/>all<sp/>done<sp/>with<sp/>this<sp/>structure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;getaddrinfo:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>gai_strerror(<ref refid="classTCPSocket_1a2f6471b799685ee580a9cfa5d94ac3a7" kindref="member">rv</ref>));</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;TCPClientSocket::getaddrinfo<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>loop<sp/>through<sp/>all<sp/>the<sp/>results<sp/>and<sp/>connect<sp/>to<sp/>the<sp/>first<sp/>we<sp/>can</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classTCPSocket_1a772833fd0273c3e0bcb1888084d38799" kindref="member">p</ref><sp/>=<sp/><ref refid="classTCPSocket_1a79ce3d1a12b7371a6838dad34d0e8cf3" kindref="member">servinfo</ref>;<sp/><ref refid="classTCPSocket_1a772833fd0273c3e0bcb1888084d38799" kindref="member">p</ref><sp/>!=<sp/>NULL;<sp/><ref refid="classTCPSocket_1a772833fd0273c3e0bcb1888084d38799" kindref="member">p</ref><sp/>=<sp/><ref refid="classTCPSocket_1a772833fd0273c3e0bcb1888084d38799" kindref="member">p</ref>-&gt;ai_next)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="classSocketFd_1a0636825d276c3525e0d8af969ce2d3b6" kindref="member">ufds</ref>.fd<sp/>=<sp/>socket(<ref refid="classTCPSocket_1a772833fd0273c3e0bcb1888084d38799" kindref="member">p</ref>-&gt;ai_family,<sp/><ref refid="classTCPSocket_1a772833fd0273c3e0bcb1888084d38799" kindref="member">p</ref>-&gt;ai_socktype,<sp/><ref refid="classTCPSocket_1a772833fd0273c3e0bcb1888084d38799" kindref="member">p</ref>-&gt;ai_protocol))</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;TCPClientSocket::socket()<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(::connect(<ref refid="classSocketFd_1a0636825d276c3525e0d8af969ce2d3b6" kindref="member">ufds</ref>.fd,<sp/><ref refid="classTCPSocket_1a772833fd0273c3e0bcb1888084d38799" kindref="member">p</ref>-&gt;ai_addr,<sp/><ref refid="classTCPSocket_1a772833fd0273c3e0bcb1888084d38799" kindref="member">p</ref>-&gt;ai_addrlen)<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(<ref refid="classSocketFd_1a0636825d276c3525e0d8af969ce2d3b6" kindref="member">ufds</ref>.fd);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;TCPClientSocket::connect()<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classTCPSocket_1a772833fd0273c3e0bcb1888084d38799" kindref="member">p</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freeaddrinfo(<ref refid="classTCPSocket_1a79ce3d1a12b7371a6838dad34d0e8cf3" kindref="member">servinfo</ref>);<sp/></highlight><highlight class="comment">//<sp/>all<sp/>done<sp/>with<sp/>this<sp/>structure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;client:<sp/>failed<sp/>to<sp/>connect\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;TCPClientSocket::connect<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>s[INET6_ADDRSTRLEN];</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inet_ntop(<ref refid="classTCPSocket_1a772833fd0273c3e0bcb1888084d38799" kindref="member">p</ref>-&gt;ai_family,<sp/><ref refid="classSocketFd_1af0d8323eedd465a6a499df1129e19f7d" kindref="member">get_in_addr</ref>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr<sp/>*)<sp/><ref refid="classTCPSocket_1a772833fd0273c3e0bcb1888084d38799" kindref="member">p</ref>-&gt;ai_addr),<sp/>s,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>s);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classConnection_1a04bb846a50a9357bab86238956940d65" kindref="member">targetaddr</ref><sp/>=<sp/>s;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freeaddrinfo(<ref refid="classTCPSocket_1a79ce3d1a12b7371a6838dad34d0e8cf3" kindref="member">servinfo</ref>);<sp/></highlight><highlight class="comment">//<sp/>all<sp/>done<sp/>with<sp/>this<sp/>structure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="classTCPClientSocket_1a9607474fe452def202cd23a6d7fecaae" refkind="member"><highlight class="normal"><ref refid="classTCPClientSocket_1a9607474fe452def202cd23a6d7fecaae" kindref="member">TCPClientSocket::~TCPClientSocket</ref>()<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/inbre001/downloads/tmp/NewComponents/trunk/0xSocket/src/TCPClientSocket.cpp"/>
  </compounddef>
</doxygen>
