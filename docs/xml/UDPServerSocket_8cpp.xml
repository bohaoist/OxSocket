<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="UDPServerSocket_8cpp" kind="file">
    <compoundname>UDPServerSocket.cpp</compoundname>
    <includes refid="UDPServerSocket_8h" local="no">UDPServerSocket.h</includes>
    <incdepgraph>
      <node id="940">
        <label>src/UDPServerSocket.cpp</label>
        <link refid="UDPServerSocket.cpp"/>
        <childnode refid="941" relation="include">
        </childnode>
      </node>
      <node id="952">
        <label>netinet/in.h</label>
      </node>
      <node id="944">
        <label>cmath</label>
      </node>
      <node id="947">
        <label>stdexcept</label>
      </node>
      <node id="955">
        <label>poll.h</label>
      </node>
      <node id="953">
        <label>fcntl.h</label>
      </node>
      <node id="942">
        <label>netdb.h</label>
      </node>
      <node id="951">
        <label>SocketFd.h</label>
        <link refid="SocketFd_8h"/>
        <childnode refid="952" relation="include">
        </childnode>
        <childnode refid="943" relation="include">
        </childnode>
        <childnode refid="953" relation="include">
        </childnode>
        <childnode refid="954" relation="include">
        </childnode>
        <childnode refid="949" relation="include">
        </childnode>
        <childnode refid="955" relation="include">
        </childnode>
      </node>
      <node id="946">
        <label>cstdio</label>
      </node>
      <node id="949">
        <label>unistd.h</label>
      </node>
      <node id="948">
        <label>UDPSocket.h</label>
        <link refid="UDPSocket_8h"/>
        <childnode refid="949" relation="include">
        </childnode>
        <childnode refid="942" relation="include">
        </childnode>
        <childnode refid="943" relation="include">
        </childnode>
        <childnode refid="950" relation="include">
        </childnode>
        <childnode refid="951" relation="include">
        </childnode>
      </node>
      <node id="950">
        <label>Transceiver.h</label>
        <link refid="Transceiver_8h"/>
      </node>
      <node id="941">
        <label>UDPServerSocket.h</label>
        <link refid="UDPServerSocket_8h"/>
        <childnode refid="942" relation="include">
        </childnode>
        <childnode refid="943" relation="include">
        </childnode>
        <childnode refid="944" relation="include">
        </childnode>
        <childnode refid="945" relation="include">
        </childnode>
        <childnode refid="946" relation="include">
        </childnode>
        <childnode refid="947" relation="include">
        </childnode>
        <childnode refid="948" relation="include">
        </childnode>
      </node>
      <node id="943">
        <label>sys/socket.h</label>
      </node>
      <node id="954">
        <label>stdio.h</label>
      </node>
      <node id="945">
        <label>cstring</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;<ref refid="UDPServerSocket_8h" kindref="compound">UDPServerSocket.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3" refid="classUDPServerSocket_1adb12550f85fb5d61aad8dd4e87a5e9d7" refkind="member"><highlight class="normal"><ref refid="classUDPServerSocket_1adb12550f85fb5d61aad8dd4e87a5e9d7" kindref="member">UDPServerSocket::UDPServerSocket</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>port)<sp/>{</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(&amp;<ref refid="classUDPSocket_1ab0ca283a6135c7073b7a1168014ae088" kindref="member">hints</ref>,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/><ref refid="classUDPSocket_1ab0ca283a6135c7073b7a1168014ae088" kindref="member">hints</ref>);</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classUDPSocket_1ab0ca283a6135c7073b7a1168014ae088" kindref="member">hints</ref>.ai_family<sp/>=<sp/>AF_UNSPEC;<sp/></highlight><highlight class="comment">//<sp/>set<sp/>to<sp/>AF_INET<sp/>to<sp/>force<sp/>IPv4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classUDPSocket_1ab0ca283a6135c7073b7a1168014ae088" kindref="member">hints</ref>.ai_socktype<sp/>=<sp/>SOCK_DGRAM;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classUDPSocket_1ab0ca283a6135c7073b7a1168014ae088" kindref="member">hints</ref>.ai_flags<sp/>=<sp/>AI_PASSIVE;<sp/></highlight><highlight class="comment">//<sp/>use<sp/>my<sp/>IP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>digits<sp/>=<sp/>(0<sp/>&lt;<sp/>port<sp/>?<sp/>(int)<sp/>log10((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<sp/>port)<sp/>+<sp/>1<sp/>:<sp/>1);</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>cport[digits<sp/>+<sp/>1];<sp/></highlight><highlight class="comment">//<sp/>add<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>(sprintf(cport,<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>port));</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>&gt;<sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;UDPServerSocket::sprintf()<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="classUDPSocket_1a8b28284b39fbfbd8bca4c1289f7dda32" kindref="member">rv</ref><sp/>=<sp/>getaddrinfo(NULL,<sp/>cport,<sp/>&amp;<ref refid="classUDPSocket_1ab0ca283a6135c7073b7a1168014ae088" kindref="member">hints</ref>,<sp/>&amp;<ref refid="classUDPSocket_1ae0c699a5dbc10580cd2844f282e61f4d" kindref="member">servinfo</ref>))<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;getaddrinfo:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>gai_strerror(<ref refid="classUDPSocket_1a8b28284b39fbfbd8bca4c1289f7dda32" kindref="member">rv</ref>));</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freeaddrinfo(<ref refid="classUDPSocket_1ae0c699a5dbc10580cd2844f282e61f4d" kindref="member">servinfo</ref>);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;UDPServerSocket::getaddrinfo()<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>loop<sp/>through<sp/>all<sp/>the<sp/>results<sp/>and<sp/>bind<sp/>to<sp/>the<sp/>first<sp/>we<sp/>can</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classUDPSocket_1a9889d73171c2d143797dce81506d24eb" kindref="member">p</ref><sp/>=<sp/><ref refid="classUDPSocket_1ae0c699a5dbc10580cd2844f282e61f4d" kindref="member">servinfo</ref>;<sp/><ref refid="classUDPSocket_1a9889d73171c2d143797dce81506d24eb" kindref="member">p</ref><sp/>!=<sp/>NULL;<sp/><ref refid="classUDPSocket_1a9889d73171c2d143797dce81506d24eb" kindref="member">p</ref><sp/>=<sp/><ref refid="classUDPSocket_1a9889d73171c2d143797dce81506d24eb" kindref="member">p</ref>-&gt;ai_next)<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="classSocketFd_1a0636825d276c3525e0d8af969ce2d3b6" kindref="member">ufds</ref>.fd<sp/>=<sp/>socket(<ref refid="classUDPSocket_1a9889d73171c2d143797dce81506d24eb" kindref="member">p</ref>-&gt;ai_family,<sp/><ref refid="classUDPSocket_1a9889d73171c2d143797dce81506d24eb" kindref="member">p</ref>-&gt;ai_socktype,<sp/><ref refid="classUDPSocket_1a9889d73171c2d143797dce81506d24eb" kindref="member">p</ref>-&gt;ai_protocol))</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;UDPServerSocket::socket()<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bind(<ref refid="classSocketFd_1a0636825d276c3525e0d8af969ce2d3b6" kindref="member">ufds</ref>.fd,<sp/><ref refid="classUDPSocket_1a9889d73171c2d143797dce81506d24eb" kindref="member">p</ref>-&gt;ai_addr,<sp/><ref refid="classUDPSocket_1a9889d73171c2d143797dce81506d24eb" kindref="member">p</ref>-&gt;ai_addrlen)<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(<ref refid="classSocketFd_1a0636825d276c3525e0d8af969ce2d3b6" kindref="member">ufds</ref>.fd);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;UDPServerSocket::bind()<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classUDPSocket_1a9889d73171c2d143797dce81506d24eb" kindref="member">p</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freeaddrinfo(<ref refid="classUDPSocket_1ae0c699a5dbc10580cd2844f282e61f4d" kindref="member">servinfo</ref>);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;UDPServerSocket::bind()<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="classUDPServerSocket_1a3725e9f63fd753989c66f2ece4cf0370" refkind="member"><highlight class="normal"><ref refid="classUDPServerSocket_1a3725e9f63fd753989c66f2ece4cf0370" kindref="member">UDPServerSocket::~UDPServerSocket</ref>()<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/inbre001/downloads/tmp/NewComponents/trunk/0xSocket/src/UDPServerSocket.cpp"/>
  </compounddef>
</doxygen>
